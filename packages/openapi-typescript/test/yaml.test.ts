import { execa } from "execa";
import os from "node:os";
import { fileURLToPath } from "node:url";

const root = new URL("../", import.meta.url);
const cwd = os.platform() === "win32" ? fileURLToPath(root) : root; // execa bug: fileURLToPath required on Windows
const cmd = "./bin/cli.js";

describe("YAML features", () => {
  it("merge", async () => {
    const result = await execa(cmd, ["./test/fixtures/yaml-merge.yaml"], {
      cwd,
    });
    expect(result.stdout).toMatchInlineSnapshot(`
      "/**
       * This file was auto-generated by openapi-typescript.
       * Do not make direct changes to the file.
       */


      export interface paths {
        \\"/admin/ping\\": {
          /** Ping pongs */
          get: operations[\\"AdminPing\\"];
        };
      }

      export type webhooks = Record<string, never>;

      export interface components {
        schemas: {
          /** @description represents an error message response. */
          HTTPError: {
            title?: string;
            detail?: string;
            status?: number;
            error?: string;
          };
        };
        responses: never;
        parameters: never;
        requestBodies: never;
        headers: never;
        pathItems: never;
      }

      export type $defs = Record<string, never>;

      export type external = Record<string, never>;

      export interface operations {

        /** Ping pongs */
        AdminPing: {
          responses: {
            /** @description OK */
            200: {
              content: {
                \\"text/plain\\": string;
              };
            };
            /** @description Error response */
            \\"4XX\\": {
              content: {
                \\"application/json\\": components[\\"schemas\\"][\\"HTTPError\\"];
              };
            };
          };
        };
      }"
    `);
  });
});
